<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[PeipeiTu's Blog]]></title><description><![CDATA[个人博客，大概会放些笔记吧]]></description><link>https://peipeiTu.github.com/blog</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 09 Dec 2019 07:37:50 GMT</lastBuildDate><item><title><![CDATA[事务和锁（包含Sequelize下的操作）]]></title><description><![CDATA[事务(Transaction)： 事务是数据库执行过程中的一个逻辑单位，由一系列有限的数据库操作序列构成。被事务裹起来的这些操作会有共同的执行结果，要么全部成功，要么失败并全部回滚。可以解决操作原子性的问题。 如银行转账，A转账100给B…]]></description><link>https://peipeiTu.github.com/blog/notebook/database/transaction_and_lock/</link><guid isPermaLink="false">https://peipeiTu.github.com/blog/notebook/database/transaction_and_lock/</guid><pubDate>Mon, 09 Dec 2019 06:09:03 GMT</pubDate><content:encoded>&lt;h5&gt;事务(Transaction)：&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;事务是数据库执行过程中的一个逻辑单位，由一系列有限的数据库操作序列构成。被事务裹起来的这些操作会有共同的执行结果，要么全部成功，要么失败并全部回滚。可以解决操作原子性的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如银行转账，A转账100给B，即需要：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;A余额 -= 100
B余额 += 100&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;两条语句虽然独立，但最终结果必须是要么都执行，要么都不执行。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// SQL代码&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// 操作&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;Sequelize&lt;/code&gt;提供&lt;code class=&quot;language-text&quot;&gt;Transaction&lt;/code&gt;类，通过&lt;code class=&quot;language-text&quot;&gt;Sequelize.transaction&lt;/code&gt;创建事务，并在每一次数据库操作设置当前操作属于哪个事务：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; sequelize&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; instance &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; Accounts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findOne&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      where&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      transaction
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; instance&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      balances&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; instance&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;balances &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; number&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      transaction
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h5&gt;并发&lt;/h5&gt;
&lt;p&gt;事务只解决了操作原子性的问题，并发则需要通过加锁来避免。&lt;/p&gt;
&lt;h6&gt;锁：&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;悲观锁&lt;/code&gt;：为了避免冲突，直接给记录加上锁，再事务释放之前，其他要对该记录执行操作的事务都必须等待。MySql、Postgres都实现了悲观锁。缺点是，再读操作频繁的场景下，会影响吞吐量。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;乐观锁&lt;/code&gt;：不对读进行限制，仅在写入更新的时候做判断。通常会增加version字段，每次更新的时候version+1，提交更新的时候先判断version，如果已失效则重试。在写操作频繁的场景下会不断发生重试，也会影响吞吐量。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;排他锁&lt;/code&gt;：悲观锁的一种，查询的时候加锁。同一资源同一时间只能有一个排他锁，其他事务读写都需要等待。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// SQL代码&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; accounts &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;UPDATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Sequelize 写法&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; Accounts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findOne&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  where&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  lock&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Sequelize&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Transaction&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;LOCK&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;UPDATE&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;共享锁&lt;/code&gt;：允许同一资源同时存在多个共享锁，当需要执行修改、删除等操作时，必须等其他所有共享锁都释放后才能执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; accounts &lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;SHARE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; Accounts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findOne&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  where&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;name&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  lock&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Sequelize&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Transaction&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;LOCK&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SHARE&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;事务隔离级&lt;/h4&gt;
&lt;table class=&quot;table table-bordered table-striped table-dark&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th scope=&quot;col&quot;&gt;级别&lt;/th&gt;
      &lt;th scope=&quot;col&quot;&gt;脏读&lt;/th&gt;
      &lt;th scope=&quot;col&quot;&gt;不可重复读&lt;/th&gt;
      &lt;th scope=&quot;col&quot;&gt;幻读&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th scope=&quot;row&quot;&gt;READ_UNCOMMITTED 读未提交&lt;/th&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th scope=&quot;row&quot;&gt;READ_COMMITTED 读已提交&lt;/th&gt;
      &lt;td&gt;×&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th scope=&quot;row&quot;&gt;REPEATABLE_READ 可重复读&lt;/th&gt;
      &lt;td&gt;×&lt;/td&gt;
      &lt;td&gt;×&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
        &lt;tr&gt;
      &lt;th scope=&quot;row&quot;&gt;SERIALIZABLE 可串行化&lt;/th&gt;
      &lt;td&gt;×&lt;/td&gt;
      &lt;td&gt;×&lt;/td&gt;
      &lt;td&gt;×&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
* ×表示在这个级别里，某类问题不会出现。
&lt;p&gt;相关文章&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.im/post/5c98e31f51882574c6520dc3&quot;&gt;学点后端知识之 Sequelize 中创建事务和🔐&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[GTM 替换GA中的用户ID]]></title><description><![CDATA[1. 设定GA中的User-ID ,同意启用User-ID政策 下一步，不用管 下一步， 2. 在GTM中获取User ID的方法 # 让开发者使用方式传递User ID 开发者通过传递ID 在GTM 的变量中，声明好变量，类型为，命名与开发者传递的一致 # 将ID…]]></description><link>https://peipeiTu.github.com/blog/notebook/gtm/ga-user-id-replace/</link><guid isPermaLink="false">https://peipeiTu.github.com/blog/notebook/gtm/ga-user-id-replace/</guid><pubDate>Sun, 29 Sep 2019 03:31:19 GMT</pubDate><content:encoded>&lt;h4&gt;1. 设定GA中的User-ID&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;管理 → 媒体资源→ 跟踪信息 → User-ID&lt;/code&gt;,同意启用User-ID政策&lt;/li&gt;
&lt;li&gt;下一步&lt;code class=&quot;language-text&quot;&gt;设置User-ID&lt;/code&gt;，不用管&lt;/li&gt;
&lt;li&gt;下一步，&lt;code class=&quot;language-text&quot;&gt;创建User-ID视图&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4&gt;2. 在GTM中获取User ID的方法&lt;/h4&gt;
&lt;h6&gt;# 让开发者使用&lt;code class=&quot;language-text&quot;&gt;datalayer&lt;/code&gt;方式传递User ID&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;开发者通过&lt;code class=&quot;language-text&quot;&gt;windows.dataLayer.push({userId:&amp;#39;123456&amp;#39;})&lt;/code&gt;传递ID&lt;/li&gt;
&lt;li&gt;在GTM 的变量中，声明好变量&lt;code class=&quot;language-text&quot;&gt;User_id&lt;/code&gt;，类型为&lt;code class=&quot;language-text&quot;&gt;数据层变量&lt;/code&gt;，命名与开发者传递的一致&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;# 将ID存储在cookie中&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;开发者将ID存储在cookie中，可以在GTM中的自定义变量 - cookie中获取。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;# 使用javascript变量寻找ID&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;当ID存在于js全局变量中时，可以使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;# 在DOM中寻找ID&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;当页面展示内容中存在ID，可以通过DOM获取ID。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;# 在URL中找ID&lt;/h6&gt;
&lt;hr&gt;
&lt;h4&gt;3. 更新GA设置变量&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;在之前配置好的&lt;code class=&quot;language-text&quot;&gt;GA设置&lt;/code&gt;变量中，选择更多设置，添加字段&lt;code class=&quot;language-text&quot;&gt;userId - {{userId}}&lt;/code&gt;,将在上一步中定义好的变量赋值给userId&lt;/li&gt;
&lt;li&gt;在GA中新建好userId维度，同时在&lt;code class=&quot;language-text&quot;&gt;GA设置&lt;/code&gt;中设置维度，注意维度的ID要一致，也赋值userId&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[GTM 中支持的GA类型]]></title><description><![CDATA[在中，代码类型设置为GA时，跟踪类型有…]]></description><link>https://peipeiTu.github.com/blog/notebook/gtm/ga-type/</link><guid isPermaLink="false">https://peipeiTu.github.com/blog/notebook/gtm/ga-type/</guid><pubDate>Sun, 29 Sep 2019 02:31:19 GMT</pubDate><content:encoded>&lt;h6&gt;在&lt;code class=&quot;language-text&quot;&gt;GTM&lt;/code&gt;中，代码类型设置为GA时，跟踪类型有&lt;code class=&quot;language-text&quot;&gt;网页浏览、事件、交易、社交、计时、装饰链接、装饰表单&lt;/code&gt;7种。&lt;/h6&gt;
&lt;h5&gt;# 网页浏览&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;一般情况下，选择自带默认触发器&lt;code class=&quot;language-text&quot;&gt;All Pages页面浏览&lt;/code&gt;即可。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单页应用情况，由于页面不会刷新，即无法触发&lt;code class=&quot;language-text&quot;&gt;网页浏览&lt;/code&gt;时：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;触发条件同时添加&lt;code class=&quot;language-text&quot;&gt;All Pages页面浏览&lt;/code&gt;和&lt;code class=&quot;language-text&quot;&gt;历史记录变更&lt;/code&gt;，后者每当地址栏变化时都会被触发。&lt;/li&gt;
&lt;li&gt;在&lt;code class=&quot;language-text&quot;&gt;GA设置&lt;/code&gt;中，替换字段&lt;code class=&quot;language-text&quot;&gt;page - {{New History Fragment}}&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;# 事件&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;事件主要有以下四个参数设置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;类别&lt;/strong&gt;：即事件名称，对要分析的对象进行分组。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;操作&lt;/strong&gt;：命名要针对特定网站对象衡量的事件或互动的类型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标签 [可选，建议填]&lt;/strong&gt;：为事件提供更多信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;值 [可选]&lt;/strong&gt;：整数，用于为网页对象指定数值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我目前理解为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;类别&lt;/code&gt;是整个事件的一个泛化名称，如导航栏点击事件；&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;操作&lt;/code&gt;和&lt;code class=&quot;language-text&quot;&gt;标签&lt;/code&gt;是对事件的具体情况细分，如到底点击了导航栏的哪个按钮，以及到底在哪个页面进行了点击，两者差不多是平等的，根据实际情况进行设置；&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;值&lt;/code&gt;是对这一事件的价值评估，在事件价值衡量的时候，一般采用这个值来等价。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[GTM 表单追踪]]></title><description><![CDATA[来源博客 表单追踪方法选择 表单能抛出表单提交事件吗？(form表单，submit提交按钮) ： YES #1 选择默认的表单追踪触发器
NO ↓
成功后页面刷新吗？页面URL更改吗？目标URL唯一吗？： YES #2 选择“thank you”页面表单追踪
NO ↓
AJAX…]]></description><link>https://peipeiTu.github.com/blog/notebook/gtm/form-track/</link><guid isPermaLink="false">https://peipeiTu.github.com/blog/notebook/gtm/form-track/</guid><pubDate>Wed, 25 Sep 2019 03:31:19 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://damonanalytics.com/2019/05/04/%E5%88%A9%E7%94%A8gtm%E8%BF%BD%E8%B8%AA7%E7%A7%8D%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4/&quot;&gt;来源博客&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;表单追踪方法选择&lt;/h4&gt;
&lt;p&gt;表单能抛出表单提交事件吗？(form表单，submit提交按钮) ： YES #1 选择默认的表单追踪触发器
NO ↓
成功后页面刷新吗？页面URL更改吗？目标URL唯一吗？： YES #2 选择“thank you”页面表单追踪
NO ↓
AJAX监听器能捕捉吗？能找到提交成功后相关dataLayer唯一变量？： YES #3 AJAX自动表单提交监听器
NO ↓
成功后展示message？该message有唯一class或id？： YES #4 选择元素可见性触发器
NO ↓
表单有JS API？API文档齐全且有简单样例？能编辑？： YES #5 创建自己的表单自动事件监听器
NO ↓
从网站开发获得帮助？： YES #6 表达提交后，请开发者触发一个dataLayer.push事件
NO ↓
以上方法都不适用？： YES #7 尝试DOM爬取
NO ↓
认输了吗？： YES 留言求助，谷歌&lt;/p&gt;
&lt;hr&gt;
&lt;h5&gt;1. GTM默认表单追踪&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;触发器类型选择&lt;code class=&quot;language-text&quot;&gt;表单提交&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;2. “Thank you”页面表单提交追踪&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;如果提交成功后，跳转的页面唯一，且该页面只能通过这种方式到达，则追踪该页面的跳转来触发事件&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;3. AJAX表单提交追踪&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Lunametrics为GTM提供了一个免费的[AJAX监听器](&lt;a href=&quot;https://www.bounteous.com/insights/2015/08/27/ajax-event-listener-google-tag-manager/?ns=l&quot;&gt;https://www.bounteous.com/insights/2015/08/27/ajax-event-listener-google-tag-manager/?ns=l&lt;/a&gt;](&lt;a href=&quot;https://www.bounteous.com/insights/2015/08/27/ajax-event-listener-google-tag-manager/?ns=l&quot;&gt;https://www.bounteous.com/insights/2015/08/27/ajax-event-listener-google-tag-manager/?ns=l&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;4. 利用元素可见性触发器追踪表单&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;如果提交成功后会弹出提示信息，则触发器选择元素可见性进行事件跟踪&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;5. 撰写自己的表单自动事件监听器&lt;/h5&gt;
&lt;h5&gt;6. 利用dataLayer事件追踪&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;由开发者主动推送事件，是性能最好，最直观的方式&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;7. 利用DOM爬取追踪表单提交&lt;/h5&gt;</content:encoded></item><item><title><![CDATA[GTM 概述]]></title><description><![CDATA[…]]></description><link>https://peipeiTu.github.com/blog/notebook/gtm/overview/</link><guid isPermaLink="false">https://peipeiTu.github.com/blog/notebook/gtm/overview/</guid><pubDate>Fri, 20 Sep 2019 05:44:04 GMT</pubDate><content:encoded>&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;Google Tag Manger&lt;/code&gt; 用于减轻埋点负担，将大部分工作从网页编码中移出，当它和&lt;code class=&quot;language-text&quot;&gt;Google Analytics&lt;/code&gt;结合使用时，相当于插入了谷歌分析和网页代码之间，所以不再需要在网页中使用&lt;code class=&quot;language-text&quot;&gt;gtag.js&lt;/code&gt;等。&lt;/p&gt;
&lt;h5&gt;# 容器&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;包含一个项目，拥有一个容器码，用于嵌入网页。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;嵌入代码有两段，在&lt;code class=&quot;language-text&quot;&gt;管理 → 安装Google跟踪代码管理器&lt;/code&gt; 中可以找到 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一段嵌入&lt;code class=&quot;language-text&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;中，尽量靠顶 &lt;/li&gt;
&lt;li&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;w&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;d&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;l&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  w&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;l&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;w&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;l&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  w&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;l&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;gtm.start&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;span &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;ag-soft-line-break&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;span&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    event&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;gtm.js&apos;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; f&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;d&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;span &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;ag-soft-line-break&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;span&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;j&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;d&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  dl&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;l&lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;dataLayer&apos;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&amp;amp;l=&apos;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;l&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  j&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;async&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  j&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;src&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;span &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;ag-soft-line-break&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;span&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;https://www.googletagmanager.com/gtm.js?id=&apos;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;i&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;dl&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;f&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parentNode&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;f&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;span &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;ag-soft-line-break&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;span&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;script&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;dataLayer&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;GTM-MGJBX6K&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;第二段代码紧跟起始&lt;code class=&quot;language-text&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt;，是预览时弹出的调试窗口&lt;/li&gt;
&lt;li&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; Google Tag &lt;span class=&quot;token function&quot;&gt;Manager&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;noscript&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;noscript&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;iframe src&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;https://www.googletagmanager.com/ns.html?id=GTM-MGJBX6K&quot;&lt;/span&gt; height&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;0&quot;&lt;/span&gt; width&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;0&quot;&lt;/span&gt; style&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;display:none;visibility:hidden&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;iframe&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;noscript&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; End Google Tag &lt;span class=&quot;token function&quot;&gt;Manager&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;noscript&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;# 变量 (variable)&lt;/h5&gt;
&lt;p&gt;主要分为&lt;code class=&quot;language-text&quot;&gt;内置变量&lt;/code&gt;和&lt;code class=&quot;language-text&quot;&gt;用户定义的变量&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;内置变量需要勾选生效，没有使用的默认不开启：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网页&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Page URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Page Hostname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Page Path&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Referrer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实用工具&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Event&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Environment Name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Container Version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Random Number&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;HTML ID&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;错误&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Error Message&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Error URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Error Line&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Debug Mode&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;点击&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Click Element&lt;/code&gt;：点击的DOM元素对象&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Click Classes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Click ID&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Click Target&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Click URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Click Text&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;表单&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Form Element&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Form Classes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Form ID&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Form Target&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Form URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Form Text&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;历史记录&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;New History Fragment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Old History Fragement&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;New History State&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Old History State&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;History Source&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;视频&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Video Provider&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Video Status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Video URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Video Title&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Video Duration&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Video Current Time&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Video Percent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Video Visible&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;滚动&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Scroll Depth Threshold&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Scroll Depth Units&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Scroll Direction&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;公开范围&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Percent Visible&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;On-Screen Duration&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自定义变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;导航&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;网址&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Http引荐来源网址&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网页变量&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;第一方Cookie&lt;/code&gt;：返回浏览器cookie中该变量的值&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;数据层变量&lt;/code&gt;：通过dataLayer.push传递的键值对&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;未定义的值&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;自定义javascript&lt;/code&gt;：自己写的js函数的返回值，其中可以用&lt;code class=&quot;language-text&quot;&gt;{{}}&lt;/code&gt;来使用已存在的变量&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;javascript变量&lt;/code&gt;：抓取页面的全局变量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;页面元素&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;元素可见性&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;自动事件变量&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;DOM元素&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实用工具&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;常量&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;对照表&lt;/code&gt;：根据输入值的不同，然后返回对应的输出值，类似switch&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;环境名称&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;随机数字&lt;/code&gt;：0~2147483647的随机数 (含边界)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;正则表达式表格&lt;/code&gt;：输入值用正则来匹配的对照表&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;自定义事件&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Google Analytics(分析) 设置&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;容器数据&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;调试模式&lt;/code&gt;：当处于调试模式时，该值为true&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;容器ID&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;容器版本号&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;# 触发器&lt;/h5&gt;
&lt;p&gt;制定规则，即规定好触发代码的条件&lt;/p&gt;
&lt;p&gt;触发器类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;网页浏览&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;DOM已准备就绪&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;窗口已加载&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;网页浏览&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;仅链接&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;所有元素&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户深度互动情况&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;YouTube视频&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;元素可见性&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;滚动深度&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;表单提交&lt;/code&gt;：&lt;code class=&quot;language-text&quot;&gt;form&lt;/code&gt;提交成功的跟踪，需要&lt;code class=&quot;language-text&quot;&gt;form&lt;/code&gt;最后的提交按钮类型是submit才能触发。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;JavaScript错误&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;历史记录更改&lt;/code&gt;：网址的变化跟踪，可用于单页应用的网页浏览跟踪。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;定时器&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;自定义事件&lt;/code&gt;：通过&lt;code class=&quot;language-text&quot;&gt;dataLayer.push({event:事件})&lt;/code&gt;触发，跟踪不便通过前端变化定位的事件。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;触发器组&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;# 代码&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;设定类型和触发器，即满足触发条件之后，向某个统计工具发送指定的消息。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Universal Analytics：向特定的GA view发送数据&lt;/li&gt;
&lt;li&gt;自定义html：向页面插入代码，可用于事件监控，再营销代码部署，GA基础代码部署&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;# GTM debug&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;线上预览&lt;/li&gt;
&lt;li&gt;demo站点&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[GA 基础知识]]></title><description><![CDATA[# 用户实别 ：Analytics默认分配，时随机数字加时间戳构成，在切换浏览器或设备，以及清除cookie时，会变化。 ：须自行设置并匹配发送，可关联一个用户登录状态下的每次访问。 # Sessions的切分 在三种情况下进行切分： 超过过期时间(默认30min) 午夜过1…]]></description><link>https://peipeiTu.github.com/blog/notebook/ga/overview/</link><guid isPermaLink="false">https://peipeiTu.github.com/blog/notebook/ga/overview/</guid><pubDate>Thu, 01 Aug 2019 22:12:03 GMT</pubDate><content:encoded>&lt;h5&gt;# 用户实别&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;ClientID&lt;/code&gt;：Analytics默认分配，时随机数字加时间戳构成，在切换浏览器或设备，以及清除cookie时，会变化。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;UserID&lt;/code&gt;：须自行设置并匹配发送，可关联一个用户登录状态下的每次访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;# Sessions的切分&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在三种情况下进行切分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超过过期时间(默认30min)&lt;/li&gt;
&lt;li&gt;午夜过12点&lt;/li&gt;
&lt;li&gt;用户通过一个广告系列来到网站，随后离开，然后通过另一个广告系列返回&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;# 目标&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;衡量网站或应用完成既定目标的情况。&lt;/li&gt;
&lt;li&gt;目标网址&lt;/li&gt;
&lt;li&gt;持续时间&lt;/li&gt;
&lt;li&gt;每次会话浏览页数/屏幕数&lt;/li&gt;
&lt;li&gt;事件&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;# 过滤器&lt;/h5&gt;
&lt;h5&gt;# 传递广告参数到GA (UTM)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;通过在网址后面加参数来区分不同的渠道和媒介等，会统计到流量模块。可以使用网址构建工具来创建格式正确的网址。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;utm_source&lt;/code&gt;：广告系列来源&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;utm_medium&lt;/code&gt;：广告系列媒介，比如email或每次点击&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;utm_term(可选)&lt;/code&gt;：广告系列字词&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;utm_content(可选)&lt;/code&gt;：广告系列内容&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;utm_campaign&lt;/code&gt;：广告系列名称，用于关键字分析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;# 另一种传递广告参数到GA的方法 (GTM)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;在GTM通过变量配置，将推广url中的特殊渠道参数取出，然后转成GA中的维度&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;# 监测邮件打开情况 (Measurement Protocol)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;在页面中加入隐藏1像素图片，用户一打开邮件，就会自动向GA发送一次事件，上面的格式化参数就会自动匹配记录，如：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;解读如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;http://www.google-analytics.com/collect?&lt;/code&gt; API请求地址&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;v=1&lt;/code&gt;：协议版本&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;tid=UA-XXXX-Y&lt;/code&gt;：跟踪ID&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cid=*|UNIQID|*&lt;/code&gt;：客户端ID，用来匿名标记一个特定的用户，设备或浏览器&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;t=event&lt;/code&gt;：命中类型&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;ec=email&lt;/code&gt;：事件类别，对应eventCategory&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;ea=open&lt;/code&gt;：事件动作，对应eventAction&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;el=*|UNIQD|*&lt;/code&gt;：事件标签，对应eventLabel&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cs=newsletter&lt;/code&gt;：广告系列来源&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cm=email&lt;/code&gt;：广告系列媒介&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cn=062413&lt;/code&gt;：广告系列名称&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cm1=1&lt;/code&gt;：自定义指标1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果MP协议上的用户标识没有用到实际的用户标识，建议用一个新的视图存放，避免对原视图造成污染&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Gatsby学习笔记]]></title><link>https://peipeiTu.github.com/blog/notebook/gatsby/learn/</link><guid isPermaLink="false">https://peipeiTu.github.com/blog/notebook/gatsby/learn/</guid><pubDate>Fri, 01 May 2015 22:12:03 GMT</pubDate><content:encoded></content:encoded></item><item><title><![CDATA[NodeJs学习笔记]]></title><link>https://peipeiTu.github.com/blog/notebook/nodejs/learn/</link><guid isPermaLink="false">https://peipeiTu.github.com/blog/notebook/nodejs/learn/</guid><pubDate>Fri, 01 May 2015 22:12:03 GMT</pubDate><content:encoded></content:encoded></item></channel></rss>