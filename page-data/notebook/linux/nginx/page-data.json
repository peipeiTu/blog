{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/notebook/linux/nginx/",
    "result": {"data":{"markdownRemark":{"html":"<h4 id=\"安装nginx\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E8%A3%85nginx\" aria-label=\"安装nginx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装Nginx</h4>\n<ul>\n<li>安装</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\r\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> nginx</code></pre></div>\n<ul>\n<li>检查状态</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">systemctl status nginx</code></pre></div>\n<h4 id=\"nginx-配置\" style=\"position:relative;\"><a href=\"#nginx-%E9%85%8D%E7%BD%AE\" aria-label=\"nginx 配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nginx 配置</h4>\n<ol>\n<li>单页应用静态文件部署，需要加上如下配置：</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">location / {\r\n  try_files $uri $uri/ /index.html;\r\n}</code></pre></div>\n<h4 id=\"nginx-限制ip访问频率\" style=\"position:relative;\"><a href=\"#nginx-%E9%99%90%E5%88%B6ip%E8%AE%BF%E9%97%AE%E9%A2%91%E7%8E%87\" aria-label=\"nginx 限制ip访问频率 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nginx 限制IP访问频率</h4>\n<ol>\n<li>添加<code class=\"language-text\">limit_req_zone</code>。这个变量只能在http使用</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">http{\r\n  ...\r\n  # 定义一个名为allips的limit_req_zone用来存储session，大小10M，\r\n  # 以$binary_remote_addr为key，限制平均每秒的请求为5个，\r\n  # 1M能存储16000个状态，rate值必须为整数，\r\n  # 如果限制两秒一个请求，可以设置为30r/m\r\n  limit_req_zone $binary_remote_addr zone=allips:10m rate=5r/s;\r\n}</code></pre></div>\n<ol start=\"2\">\n<li>添加<code class=\"language-text\">limit_req</code>。这个变量可以在http,server,location使用。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">...\r\nserver{\r\n  ...\r\n  location {\r\n    ...\r\n    #限制每ip每秒不超过20个请求，漏桶数burst为5\r\n    #brust的意思就是，如果第1秒、2,3,4秒请求为19个，\r\n    #第5秒的请求为25个是被允许的。\r\n    #但是如果你第1秒就25个请求，第2秒超过20的请求返回503错误。\r\n    #nodelay，如果不设置该选项，严格使用平均速率限制请求数，\r\n    #第1秒25个请求时，5个请求放到第2秒执行，\r\n    #设置nodelay，25个请求将在第1秒执行。\r\n    limit_req zone=allips burst=5 nodelay;\r\n    ...\r\n  }\r\n...\r\n}\r\n...</code></pre></div>\n<h4 id=\"配置https\" style=\"position:relative;\"><a href=\"#%E9%85%8D%E7%BD%AEhttps\" aria-label=\"配置https permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置HTTPS</h4>\n<p>可以使用<code class=\"language-text\">certbot</code>进行设置，在这里只记录<code class=\"language-text\">ubuntu18</code>的<code class=\"language-text\">nginx</code>设置方法，其他的<a href=\"https://certbot.eff.org/lets-encrypt/ubuntuxenial-nginx\">点此查看</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 添加Certbot PPA</span>\r\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\r\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> software-properties-common\r\n<span class=\"token function\">sudo</span> add-apt-repository universe\r\n<span class=\"token function\">sudo</span> add-apt-repository ppa:certbot/certbot\r\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\r\n\r\n<span class=\"token comment\"># 安装Certbot</span>\r\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> certbot python-certbot-nginx\r\n\r\n<span class=\"token comment\"># 安装证书</span>\r\n<span class=\"token function\">sudo</span> certbot --nginx\r\n\r\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\r\nPlugins selected: Authenticator nginx, Installer nginx\r\n<span class=\"token comment\"># 选择要安装证书的域名,域名需要在nginx配置填写好才能搜索</span>\r\nWhich names would you like to activate HTTPS for?\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n<span class=\"token number\">1</span>: www.example.com\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nSelect the appropriate numbers separated by commas and/or spaces, or leave input\r\nblank to <span class=\"token keyword\">select</span> all options shown <span class=\"token punctuation\">(</span>Enter <span class=\"token string\">'c'</span> to cancel<span class=\"token punctuation\">)</span>: <span class=\"token number\">1</span>  \r\n<span class=\"token comment\"># 这里的认证需要保证当前nginx正确工作，并且域名正确指向本台服务器，即验证这个域名是否归你所有</span>\r\nObtaining a new certificate\r\nPerforming the following challenges:\r\nhttp-01 challenge <span class=\"token keyword\">for</span> www.example.com\r\nWaiting <span class=\"token keyword\">for</span> verification<span class=\"token punctuation\">..</span>.\r\nCleaning up challenges\r\nDeploying Certificate to VirtualHost /etc/nginx/sites-enabled/node\r\n<span class=\"token comment\"># 是否将所有请求都跳转到https上</span>\r\nPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n<span class=\"token number\">1</span>: No redirect - Make no further changes to the webserver configuration.\r\n<span class=\"token number\">2</span>: Redirect - Make all requests redirect to secure HTTPS access. Choose this <span class=\"token keyword\">for</span>\r\nnew sites, or <span class=\"token keyword\">if</span> you<span class=\"token string\">'re confident your site works on HTTPS. You can undo this\r\nchange by editing your web server'</span>s configuration.\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nSelect the appropriate number <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>-2<span class=\"token punctuation\">]</span> <span class=\"token keyword\">then</span> <span class=\"token punctuation\">[</span>enter<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>press <span class=\"token string\">'c'</span> to cancel<span class=\"token punctuation\">)</span>: <span class=\"token number\">2</span> \r\nRedirecting all traffic on port <span class=\"token number\">80</span> to ssl <span class=\"token keyword\">in</span> /etc/nginx/sites-enabled/node\r\n\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nCongratulations<span class=\"token operator\">!</span> You have successfully enabled https://www.example.com\r\n\r\nYou should <span class=\"token builtin class-name\">test</span> your configuration at:\r\nhttps://www.ssllabs.com/ssltest/analyze.html?d<span class=\"token operator\">=</span>www.example.com\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n<span class=\"token comment\"># 安装完成后，certbot会自动新建定时任务来定时刷新证书，避免过期</span>\r\n<span class=\"token comment\"># 通过以下命令检查自动更新是否能顺利进行</span>\r\n$ <span class=\"token function\">sudo</span> certbot renew --dry-run\r\n\r\n<span class=\"token comment\"># 检查定时任务是否正确添加</span>\r\n$ <span class=\"token function\">sudo</span> systemctl list-timers\r\n\r\nNEXT                         LEFT         LAST                         PASSED             UNIT                         ACTIVATES\r\nMon <span class=\"token number\">2019</span>-12-16 <span class=\"token number\">20</span>:31:18 CST  3h 9min left Mon <span class=\"token number\">2019</span>-12-16 07:45:10 CST  9h ago             apt-daily.timer              apt-daily.service\r\nTue <span class=\"token number\">2019</span>-12-17 06:09:19 CST  12h left     Mon <span class=\"token number\">2019</span>-12-16 06:32:56 CST  10h ago            apt-daily-upgrade.timer      apt-daily-upgrade.service\r\nTue <span class=\"token number\">2019</span>-12-17 09:06:43 CST  15h left     n/a                          n/a                certbot.timer                certbot.service\r\n</code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85nginx\">安装Nginx</a></li>\n<li><a href=\"#nginx-%E9%85%8D%E7%BD%AE\">Nginx 配置</a></li>\n<li><a href=\"#nginx-%E9%99%90%E5%88%B6ip%E8%AE%BF%E9%97%AE%E9%A2%91%E7%8E%87\">Nginx 限制IP访问频率</a></li>\n<li><a href=\"#%E9%85%8D%E7%BD%AEhttps\">配置HTTPS</a></li>\n</ul>","frontmatter":{"title":"Nginx 安装和学习","date":"2019-12-01 08:12","description":"Nginx 安装和学习","type":"Linux使用"}}},"pageContext":{"slug":"/notebook/linux/nginx/","previous":{"fields":{"slug":"/notebook/docker/basic/"},"frontmatter":{"title":"Docker的基础知识和操作"}},"next":{"fields":{"slug":"/notebook/linux/mysql/"},"frontmatter":{"title":"mysql 安装和学习（基于ubuntu 20）"}}}},
    "staticQueryHashes": ["63159454"]}