{"componentChunkName":"component---src-templates-blog-post-js","path":"/notebook/program/regular_expression/","result":{"data":{"markdownRemark":{"html":"<p>在对字符串进行内容解析时，优先使用正则表达式，比直接切割字符串会好用很多。以前总觉得难，用了之后发现好像也不难啊，还挺有趣。</p>\n<p>先摆一个学习正则表达式比较有用的网站：<a href=\"https://regex101.com\">https://regex101.com</a></p>\n<h3 id=\"定义\" style=\"position:relative;\"><a href=\"#%E5%AE%9A%E4%B9%89\" aria-label=\"定义 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>定义</h3>\n<p>正则表达式(regular expression)描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。\n根据制定的规则构造正则表达式，就能从字符串中提取所有符合规则的字段。\n正则表达式由普通字符和特殊字符（元字符）组成。</p>\n<hr>\n<h3 id=\"普通字符\" style=\"position:relative;\"><a href=\"#%E6%99%AE%E9%80%9A%E5%AD%97%E7%AC%A6\" aria-label=\"普通字符 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>普通字符</h3>\n<p>即平时使用的字符，相当于常量，自己代表自己本身</p>\n<hr>\n<h3 id=\"元字符\" style=\"position:relative;\"><a href=\"#%E5%85%83%E5%AD%97%E7%AC%A6\" aria-label=\"元字符 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>元字符</h3>\n<p>不是做为它本身出现，而是有其他的含义的字符。</p>\n<table class=\"table table-bordered table-striped\">\n\t<thead class=\"thead-light\"><tr><th class=\"text-center\" width=\"15%\">字符</th><th>描述</th></tr></thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">\\</td>\n    \t<td>和下一字符合并组成特殊字符、原义字符、向后引用或八进制转义符</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">^</td>\n    \t<td>匹配起始位置。如果设置了RegExp对象的Multiline属性，也匹配<code>'\\n'</code>或<code>'\\r'</code>之后的位置</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">$</td>\n    \t<td>匹配结束位置。如果设置了RegExp对象的Multiline属性，也匹配<code>'\\n'</code>或<code>'\\r'</code>之前的位置</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">*</td>\n    \t<td>匹配前面的子表达式零次或多次，等价于<code>{0,}</code></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">+</td>\n    \t<td>匹配前面的子表达式一次或多次，等价于<code>{1,}</code></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">?</td>\n    \t<td>匹配前面的子表达式零次或一次，等价于<code>{0,1}</code></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">{n}</td>\n    \t<td>匹配前面的子表达式n次，n为非负整数</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">{n,}</td>\n    \t<td>匹配前面的子表达式至少n次，n为非负整数</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">{n,m}</td>\n    \t<td>匹配前面的子表达式次数在n次到m次之间，m、n均为非负整数，且m<=n</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">?</td>\n    \t<td>\n\t\t\t\t非贪婪模式匹配，当该字符紧跟其他限制符<code>(*, +, ?, {n}, {n,}, {n,m})</code>后面时，尽可能少的匹配所搜索的字符串。<br>\n\t\t\t\t例如，对于字符串<code>'oooo'</code>，<code>'o+?'</code>将匹配单个<code>'o'</code>，而<code>'o+'</code>将匹配所有<code>'o'</code>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">.</td>\n    \t<td>匹配除换行符<code>（\\n、\\r）</code>外的任何单个字符</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">(pattern)</td>\n    \t<td>匹配pattern并获取这一匹配的实际内容</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center\">(?:pattern)</td>\n    \t<td>匹配pattern但不获取匹配结果</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">(?=pattern)</td>\n    \t<td>\n\t\t\t\t\t正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串，非获取匹配。<br>\n\t\t\t\t\t例如，\"<code>Windows(?=95|98|NT|2000)</code>\"能匹配\"<code>Windows2000</code>\"中的\"<code>Windows</code>\"，但不能匹配\"<code>Windows3.1</code>\"中的\"<code>Windows</code>\"。<br>\n\t\t\t\t\t预查不消耗字符，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">(?!pattern)</td>\n    \t<td>\n\t\t\t\t正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。非获取匹配。<br>\n\t\t\t\t例如，<code>\"Windows(?!95|98|NT|2000)\"</code>能匹配<code>\"Windows3.1\"</code>中的<code>\"Windows\"</code>，不能匹配<code>\"Windows2000\"</code>中的<code>\"Windows\"</code>。<br>\n\t\t\t\t预查不消耗字符，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">(?&lt;=pattern)</td>\n\t\t\t<td>\n\t\t\t\t反向(look behind)肯定预查，与正向肯定预查方向相反。<br>\n\t\t\t\t例如，\"<code>(?&lt;=95|98|NT|2000)Windows</code>\"能匹配\"<code>2000Windows</code>\"中的\"<code>Windows</code>\"，不能匹配\"<code>3.1Windows</code>\"中的\"<code>Windows</code>\"。\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">(?&lt;!pattern)</td>\n\t\t\t<td>\n\t\t\t\t反向否定预查，与正向否定预查类似，只是方向相反。<br>\n\t\t\t\t例如<code>'(?&lt;!95|98|NT|2000)Windows'</code>能匹配<code>'3.1Windows'</code>中的<code>'Windows'</code>，不能匹配<code>'2000Windows'</code>中的<code>'Windows'</code>。\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">x|y</td>\n    \t<td>匹配<code> x </code>或<code> y </code></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">[xyz]</td>\n    \t<td>字符集合，匹配所包含的任意一个字符</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">[^xyz]</td>\n    \t<td>负值字符集合，匹配未包含的任意字符</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">[a-z]</td>\n    \t<td>字符范围，匹配指定范围内的任意字符。<code>'[a-z]'</code>可以匹配<code>'a'</code>到<code>'z'</code>范围内的任意小写字母字符。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">[^a-z]</td>\n    \t<td>负值字符范围。匹配任何不在指定范围内的任意字符</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\b</td>\n    \t<td>\n\t\t\t\t匹配一个单词边界，也就是指单词和空格间的位置。<br>\n\t\t\t\t例如，<code>'er\\b'</code> 可以匹配<code>'never'</code> 中的 <code>'er'</code>，不能匹配 <code>'verb'</code> 中的 <code>'er'</code>。\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\B</td>\n    \t<td>\n\t\t\t\t匹配非单词边界。<br>\n\t\t\t\t例如，<code>'er\\b'</code> 可以匹配<code>'verb'</code> 中的 <code>'er'</code>，不能匹配 <code>'never'</code> 中的 <code>'er'</code>。\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\cx</td>\n    \t<td>\n\t\t\t\t匹配由 <code>x</code> 指明的控制字符。<br>\n\t\t\t\t例如， <code>\\cM</code> 匹配一个 <code>Control-M</code> 或回车符。<br>\n\t\t\t\t<code>x</code> 的值必须为 <code>A-Z</code> 或 <code>a-z</code> 之一。否则，将 <code>c</code> 视为一个原义的 <code>'c'</code> 字符。\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\d</td>\n    \t<td>匹配一个数字字符。等价于 <code>[0-9]</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\D</td>\n    \t<td>匹配一个非数字字符。等价于 <code>[^0-9]</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\f</td>\n    \t<td>匹配一个换页符。等价于 <code>\\x0c</code> 和 <code>\\cL</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\n</td>\n    \t<td>匹配一个换行符。等价于 <code>\\x0a</code> 和 <code>\\cJ</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\r</td>\n    \t<td>匹配一个回车符。等价于 <code>\\x0d</code> 和 <code>\\cM</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\s</td>\n    \t<td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于 <code>[ \\f\\n\\r\\t\\v]</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\S</td>\n    \t<td>匹配任何非空白字符。等价于 <code>[^ \\f\\n\\r\\t\\v]</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\t</td>\n    \t<td>匹配一个制表符。等价于 <code>\\x09</code> 和 <code>\\cI</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\v</td>\n    \t<td>匹配一个垂直制表符。等价于 <code>\\x0b</code> 和 <code>\\cK</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\w</td>\n    \t<td>匹配字母、数字、下划线。等价于 <code>[A-Za-z0-9_]</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\W</td>\n    \t<td>匹配非字母、数字、下划线。等价于 <code>[^A-Za-z0-9_]</code>。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\xn</td>\n    \t<td>\n\t\t\t\t匹配 n（十六进制转义值，且为确定的两个数字长）。<br>\n\t\t\t\t例如，<code>'\\x41'</code> 匹配 <code>'A'</code>；<code>'\\x041'</code> 等价于 <code>'\\x04'&'1'</code>。<br>\n\t\t\t\t正则表达式中可以使用 ASCII 编码。\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\num</td>\n    \t<td>匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，'(.)\\1' 匹配两个连续的相同字符。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\n</td>\n    \t<td>标识一个八进制转义值或一个向后引用。如果 \\n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\nm</td>\n    \t<td>标识一个八进制转义值或一个向后引用。如果 \\nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \\nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \\nm 将匹配八进制转义值 nm。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\nml</td>\n    \t<td>如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\un</td>\n    \t<td>匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \\u00A9 匹配版权符号 (?)。</td>\n\t\t</tr>\n\t</tbody>\n</table>\n<hr>\n<h3 id=\"运算符优先级\" style=\"position:relative;\"><a href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7\" aria-label=\"运算符优先级 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>运算符优先级</h3>\n<ul>\n<li>正则表达式从左到右计算，优先级顺序与算数表达式相近。</li>\n</ul>\n<table class=\"table table-bordered table-striped\">\n\t<thead class=\"thead-light\"><tr><th class=\"text-center\" width=\"25%\">运算符</th><th>描述</th></tr></thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">\\</td>\n    \t<td>转义符</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">(), (?:), (?=), []</td>\n    \t<td>圆括号和方括号</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">*, +, ?, {n}, {n,}, {n,m}</td>\n    \t<td>限定符</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">^, $, \\任何元字符、任何字符</td>\n    \t<td>定位点和序列（即：位置和顺序）</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"text-center align-middle\">|</td>\n    \t<td>\n\t\t\t\t替换，\"或\"操作<br>\n\t\t\t\t字符具有高于替换运算符的优先级，使得\"m|food\"匹配\"m\"或\"food\"。若要匹配\"mood\"或\"food\"，请使用括号创建子表达式，从而产生\"(m|f)ood\"。\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>","tableOfContents":"<ul>\n<li><a href=\"/notebook/program/regular_expression/#%E5%AE%9A%E4%B9%89\">定义</a></li>\n<li><a href=\"/notebook/program/regular_expression/#%E6%99%AE%E9%80%9A%E5%AD%97%E7%AC%A6\">普通字符</a></li>\n<li><a href=\"/notebook/program/regular_expression/#%E5%85%83%E5%AD%97%E7%AC%A6\">元字符</a></li>\n<li><a href=\"/notebook/program/regular_expression/#%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7\">运算符优先级</a></li>\n</ul>","frontmatter":{"title":"正则表达式","date":"2020-06-10 06:48","description":"正则表达式的使用","type":"编程"}}},"pageContext":{"slug":"/notebook/program/regular_expression/","previous":{"fields":{"slug":"/notebook/database/sequelize/"},"frontmatter":{"title":"Sequelize常用方法"}},"next":null}}}